#include "GUI.h"

void GUI::MainTitle(int x, int y)
{
	unsigned char M[] = {
						' ', '_', '_', ' ',' ', ' ',' ','_','_', ' ', ' ', ' ',
						'/', '\\',' ', '"','-', '.','/',' ',' ', '\\',' ', ' ',
						'\\',' ', '\\',' ','\\','-','.','/','\\',' ', '\\',' ',
						' ','\\',' ','\\','_','\\',' ','\\',' ','\\','_','\\',
						' ',' ','\\','/','_','/',' ',' ','\\','/','_','/'
	};
	unsigned char A[] = {
						' ','_','_','_','_','_','_',' ',' ',' ',
						'/','\\',' ',' ','_','_',' ','\\',' ',' ',
						'\\',' ','\\',' ',' ','_','_',' ','\\',' ',
						' ','\\',' ','\\','_','\\',' ','\\','_','\\',
						' ',' ','\\','/','_','/','\\','/','_','/'
	};
	unsigned char T[] = {
						' ','_','_','_','_','_','_',' ',
						'/','\\','_','_',' ',' ','_','\\',
						'\\','/','_','/','\\',' ','\\','/',
						' ',' ',' ','\\',' ','\\','_','\\',
						' ',' ',' ',' ','\\','/','_','/'
	};
	unsigned char C[] = {
						' ','_','_','_','_','_','_',' ',' ',' ',
						'/','\\',' ',' ','_','_','_','\\',' ',' ',
						'\\',' ','\\',' ','\\','_','_','_','_',' ',
						' ','\\',' ','\\','_','_','_','_','_','\\',
						' ',' ','\\','/','_','_','_','_','_','/',
	};
	unsigned char H[] = {
						' ','_','_',' ',' ','_','_',' ',' ',' ',
						'/','\\',' ','\\','_','\\',' ','\\',' ',' ',
						'\\',' ','\\',' ',' ','_','_',' ','\\',' ',
						' ','\\',' ','\\','_','\\',' ','\\','_','\\',
						' ',' ','\\','/','_','/','\\','/','_','/',
	};
	unsigned char I[] = {
						' ','_','_',' ',' ',' ',
						'/','\\',' ','\\',' ',' ',
						'\\',' ','\\',' ','\\',' ',
						' ','\\',' ','\\','_','\\',
						' ',' ','\\','/','_','/',
	};
	unsigned char N[] = {
						' ','_','_',' ',' ',' ','_','_',' ',' ',' ',
						'/','\\',' ','"','-','.','\\',' ','\\',' ',' ',
						'\\',' ','\\',' ','\\','-','.',' ',' ','\\',' ',
						' ','\\',' ','\\','_','\\','\\','"','\\','_','\\',
						' ',' ','\\','/','_','/',' ','\\','/','_','/',
	};
	unsigned char G[] = {
						' ','_','_','_','_','_','_',' ',' ',' ',
						'/','\\',' ',' ','_','_','_','\\',' ',' ',
						'\\',' ','\\',' ','\\','_','_',' ','\\',' ',
						' ','\\',' ','\\','_','_','_','_','_','\\',
						' ',' ','\\','/','_','_','_','_','_','/',
	};
	unsigned char E[] = {
						' ','_','_','_','_','_','_',' ',' ',' ',
						'/','\\',' ',' ','_','_','_','\\',' ',' ',
						'\\',' ','\\',' ',' ','_','_','\\',' ',' ',
						' ','\\',' ','\\','_','_','_','_','_','\\',
						' ',' ','\\','/','_','_','_','_','_','/',
	};
	unsigned char R[] = {
						' ','_','_','_','_','_','_',' ',' ',' ',
						'/','\\',' ',' ','=','=',' ','\\',' ',' ',
						'\\',' ','\\',' ',' ','_','_','<',' ',' ',
						' ','\\',' ','\\','_','\\',' ','\\','_','\\',
						' ',' ','\\','/','_','/','/',' ','_','/',
	};
	unsigned char O[] = {
						' ','_','_','_','_','_','_',' ',' ',' ',' ',
						'/','\\',' ',' ','_','_',' ','\\',' ',' ',
						' ','\\',' ','\\',' ','\\','/','\\',' ','\\',' ',
						' ',' ','\\',' ','\\','_','_','_','_','_','\\',
						' ',' ',' ','\\','/','_','_','_','_','_','/',' '
	};
	unsigned char S[] = {
						' ','_','_','_','_','_','_',' ',' ',' ',
						'/','\\',' ',' ','_','_','_','\\',' ',' ',
						'\\',' ','\\','_','_','_',' ',' ','\\',' ',
						' ','\\','/','\\','_','_','_','_','_','\\',
						' ',' ','\\','/','_','_','_','_','_','/'
	};
	unsigned char space[] = {
						' ',' ',' ',' ',
						' ',' ',' ',' ',
						' ',' ',' ',' ',
						' ',' ',' ',' ',
						' ',' ',' ',' '
	};

	unsigned char* word[] = { C, R, O, S, S, I, N, G, G, A, M, E };
	int sizeOfWord = (sizeof(word) / sizeof(word[0]));
	int wide[] = { 10, 10, 11, 10, 10, 6, 11, 10, 10, 10, 12, 10 };
	int color[] = { AQUA, LIGHT_AQUA, LIGHT_BLUE, BLUE, LIGHT_PURPLE, PURPLE };

	int colorCount = 0, left = 0;
	int loop = 1;
	while (loop--) {
		left = x - 26;
		for (int i = 0; i < sizeOfWord; i++) {
			for (int j = 0; j < 5; j++) {
				for (int k = 0; k < wide[i]; k++) {
					Common::setConsoleColor(BRIGHT_WHITE, color[colorCount % 6]);
					if (i > 7) Common::gotoXY(left + k, y + 11 + j);
					else Common::gotoXY(left + k, y + 5 + j);
					putchar(word[i][j * wide[i] + k]);
				}
			}
			left += wide[i] + 1;
			if (i == 7) left = x - 8;
		}
		Sleep(200);
		colorCount++;
	}
}

void GUI::Image(string fileName, int x, int y, int COLOR)
{
	ifstream in;
	in.open(fileName);

	string s;
	int i = 0;

	Common::setConsoleColor(BRIGHT_WHITE, COLOR);
	while (getline(in, s)) {
		Common::gotoXY(x, y + i);
		cout << s;
		i++;
	}
	in.close();
}